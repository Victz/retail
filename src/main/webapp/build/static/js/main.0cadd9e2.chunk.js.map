{"version":3,"sources":["module/auth.js","layout/nav.js","layout/footer.js","home.js","login.js","register.js","topup.js","pay.js","module/private.route.js","App.js","reportWebVitals.js","index.js"],"names":["username","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","user","Authorization","AppNavbar","props","state","isOpen","currentUser","undefined","showAdminBoard","toggle","bind","logOut","Auth","getCurrentUser","this","setState","roles","includes","logout","color","dark","expand","className","tag","Link","to","onClick","navbar","href","Component","Footer","Date","getFullYear","Home","profile","debts","credits","transactions","isLoading","remove","fetch","headers","authHeader","json","id","a","method","updatedGroups","groups","filter","i","transactionList","map","transaction","style","whiteSpace","type","amount","createdBy","lastModifiedDate","debtList","debt","creditor","creditList","credit","debitor","balance","substring","substr","length","role","index","required","value","Login","handleLogin","onChangeUsername","loading","message","e","target","preventDefault","form","validateAll","checkBtn","context","_errors","login","history","push","window","location","reload","error","resMessage","toString","onSubmit","ref","c","htmlFor","name","onChange","validations","disabled","display","Register","handleRegister","errorMessage","register","Topup","onChangeAmount","options","min","step","Pay","onChangePayee","payee","PrivateRoute","component","rest","Route","render","Redirect","pathname","from","App","Switch","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cadd9e2.chunk.js","sourcesContent":["import axios from \"axios\";\n\nclass Auth {\n    login(username) {\n        return axios\n                .post(\"/api/login\", {username})\n                .then(response => {\n                    if (response.data.accessToken) {\n                        localStorage.setItem(\"user\", JSON.stringify(response.data));\n                    }\n                    return response.data;\n                });\n    }\n\n    logout() {\n        localStorage.removeItem(\"user\");\n    }\n\n    register(username) {\n        return axios.post(\"/api/register\", {username});\n    }\n\n    getCurrentUser() {\n        return JSON.parse(localStorage.getItem('user'));\n        ;\n    }\n\n    authHeader() {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (user && user.accessToken) {\n            return {Authorization: 'Bearer ' + user.accessToken};\n        } else {\n            return {};\n        }\n    }\n}\n\nexport default new Auth();","import React, { Component } from 'react';\nimport { Collapse, Nav, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink, } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nimport Auth from \"../module/auth\";\n\nexport default class AppNavbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            currentUser: undefined,\n            showAdminBoard: false\n        };\n        this.toggle = this.toggle.bind(this);\n        this.logOut = this.logOut.bind(this);\n    }\n\n    componentDidMount() {\n        const user = Auth.getCurrentUser();\n\n        if (user) {\n            this.setState({\n                currentUser: user,\n                showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n            });\n        }\n    }\n\n    logOut() {\n        Auth.logout();\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        const {currentUser, showAdminBoard} = this.state;\n\n        return <Navbar color=\"dark\" dark expand=\"md\" className=\"mb-5\">\n            <NavbarBrand tag={Link} to=\"/\">Example.com</NavbarBrand>\n            <NavbarToggler onClick={this.toggle}/>\n            <Collapse isOpen={this.state.isOpen} navbar>\n                <Nav className=\"ml-auto\" navbar>\n                    {currentUser ? (\n                            <NavItem>\n                                <NavLink href=\"/login\" onClick={this.logOut}>Logout</NavLink>\n                            </NavItem>\n                                        ) : (\n                            <NavItem>\n                                <NavLink href=\"/login\">Login</NavLink>\n                            </NavItem>\n\n                                        )}\n                </Nav>\n            </Collapse>\n        </Navbar>;\n\n    }\n}","import React, { Component } from 'react';\n\nexport default class Footer extends Component {\n\n    render() {\n        return <footer className=\"container my-5\">\n            <hr/>\n            <ul className=\"nav justify-content-center\">\n                <li className=\"nav-item\"><a href=\"/\" className=\"nav-link text-muted\">Example.com &copy; {new Date().getFullYear()} </a></li>\n            </ul>\n        </footer>;\n\n    }\n}","import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport AppNavbar from './layout/nav';\nimport Footer from './layout/footer';\nimport Auth from \"./module/auth\";\n\nexport default class Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentUser: Auth.getCurrentUser(),\n            profile: undefined,\n            debts: [],\n            credits: [],\n            transactions: [],\n            isLoading: true};\n        this.remove = this.remove.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({isLoading: true});\n\n        fetch('/api/profile', {headers: Auth.authHeader()})\n                .then(response => response.json())\n                .then(data => this.setState({profile: data}));\n        fetch('/api/debts', {headers: Auth.authHeader()})\n                .then(response => response.json())\n                .then(data => this.setState({debts: data}));\n        fetch('/api/credits', {headers: Auth.authHeader()})\n                .then(response => response.json())\n                .then(data => this.setState({credits: data}));\n        fetch('/api/transactions', {headers: Auth.authHeader()})\n                .then(response => response.json())\n                .then(data => this.setState({transactions: data, isLoading: false}));\n    }\n\n    async remove(id) {\n        await fetch(`/api/transaction/${id}`, {\n            method: 'DELETE',\n            headers: Auth.authHeader()\n        }).then(() => {\n            let updatedGroups = [...this.state.groups].filter(i => i.id !== id);\n            this.setState({transactions: updatedGroups});\n        });\n    }\n\n    render() {\n        const {currentUser, profile, debts, credits, transactions, isLoading} = this.state;\n\n        if (isLoading) {\n            return <p>Loading...</p>;\n        }\n\n        const transactionList = transactions.map(transaction => {\n            return <tr key={transaction.id}>\n                <td style={{whiteSpace: 'nowrap'}}>{transaction.user.username}</td>\n                <td >{transaction.type}</td>\n                <td>{transaction.amount}</td>\n                <td >{transaction.createdBy}</td>\n                <td  className=\"text-right\">{transaction.lastModifiedDate}</td>\n            </tr>\n        });\n\n        const debtList = debts.map(debt => {\n            return <p className=\"text-danger\">Owning {debt.amount} to {debt.creditor.username}.</p>\n        });\n        const creditList = credits.map(credit => {\n            return <p className=\"text-success\">Owning {credit.amount} from {credit.debitor.username}.</p>\n        });\n\n        return (\n                <div>\n                    <AppNavbar/>\n                    <Container>\n                        <header className=\"jumbotron\">\n                            <h3>\n                                Hello, <strong>{currentUser.username}</strong>! \n                            </h3>\n                            <p className=\"text-primary\">Your Balance is {profile.balance}</p>\n                            {debtList}{creditList}                \n                            <Link className=\"btn btn-primary\" to=\"/topup\"  >Top Up</Link>\n                            <p className=\"mt-3\">\n                                <strong>Token:</strong>{\" \"}\n                                {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n                                {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n                            </p>\n                            <strong>Authorities:</strong>\n                            <ul>\n                                {currentUser.roles && currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n                            </ul>       \n                        </header>                \n                        <Link className=\"btn btn-primary float-right\" to=\"/pay\" >Pay</Link>                \n                        <h3>Transactions</h3>   \n                        <Table>\n                            <thead>\n                                <tr>\n                                    <th>Owner</th>\n                                    <th>Type</th>\n                                    <th>Amount</th>\n                                    <th>Created By</th>\n                                    <th className=\"text-right\">Transaction Date</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {transactionList}\n                            </tbody>\n                        </Table>\n                    </Container>\n                    <Footer/>\n                </div>\n                );\n    }\n}","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AppNavbar from './layout/nav';\nimport Footer from './layout/footer';\nimport Auth from \"./module/auth\";\n\nconst required = value => {\n    if (!value) {\n        return (\n                <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n                </div>\n                );\n    }\n};\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n\n        this.state = {\n            username: \"\",\n            loading: false,\n            message: \"\"\n        };\n    }\n\n    onChangeUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    handleLogin(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            loading: true\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            Auth.login(this.state.username).then(\n                    () => {\n                this.props.history.push(\"/home\");\n                window.location.reload();\n            },\n                    error => {\n                        const resMessage =\n                                (error.response &&\n                                        error.response.data &&\n                                        error.response.data.message) ||\n                                error.message ||\n                                error.toString();\n\n                        this.setState({\n                            loading: false,\n                            message: resMessage\n                        });\n                    }\n            );\n        } else {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        return (<div>\n            <AppNavbar/>  \n            <div className=\"Container\">\n                <Form\n                    onSubmit={this.handleLogin}\n                    ref={c => {\n                                    this.form = c;\n                                }} className=\"p-3\">\n        \n                    <h1 className=\"h3 my-5 text-muted\">Login</h1>  \n        \n                    {this.state.message && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    {this.state.message}\n                                </div>\n                            </div>\n                                        )}\n        \n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">Username</label>\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"username\"\n                            value={this.state.username}\n                            onChange={this.onChangeUsername}\n                            validations={[required]}\n                            />\n                    </div>                \n                    <div className=\"form-group\">\n                        <button\n                            className=\"btn btn-primary btn-block\"\n                            disabled={this.state.loading}\n                            >\n                            {this.state.loading && (\n                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                                )}\n                            <span>Login</span>\n                        </button>\n                    </div>        \n        \n                    <CheckButton\n                        style={{display: \"none\"}}\n                        ref={c => {\n                                        this.checkBtn = c;\n                                    }}\n                        />\n                    <a href=\"/register\">Register</a>\n                </Form>\n            </div>\n            <Footer/>\n        </div>\n                );\n    }\n}","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AppNavbar from './layout/nav';\nimport Footer from './layout/footer';\nimport Auth from \"./module/auth\";\n\nconst required = value => {\n    if (!value) {\n        return (\n                <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n                </div>\n                );\n    }\n};\n\nexport default class Register extends Component {\n    constructor(props) {\n        super(props);\n        this.handleRegister = this.handleRegister.bind(this);\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n\n        this.state = {\n            username: \"\",\n            loading: false,\n            message: \"\",\n            errorMessage: \"\"\n        };\n    }\n\n    onChangeUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    handleRegister(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            errorMessage: \"\",\n            loading: true\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            Auth.register(this.state.username).then(\n                    () => {\n                this.setState({\n                    loading: false,\n                    message: \"User Registered Successfully!\"\n                });\n            },\n                    error => {\n                        const resMessage =\n                                (error.response &&\n                                        error.response.data &&\n                                        error.response.data.message) ||\n                                error.message ||\n                                error.toString();\n\n                        this.setState({\n                            loading: false,\n                            errorMessage: resMessage\n                        });\n                    }\n            );\n        } else {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        return (<div>\n            <AppNavbar/>  \n            <div className=\"Container\">\n                <Form\n                    onSubmit={this.handleRegister} ref={c => {\n                                    this.form = c;\n                                }} className = \"p-3\">\n        \n                    <h1 className=\"h3 my-5 text-muted\">Register</h1> \n        \n                    {this.state.message && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-success\" role=\"alert\">\n                                    {this.state.message}\n                                </div>\n                            </div>\n                                        )}\n        \n                    {this.state.errorMessage && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    {this.state.errorMessage}\n                                </div>\n                            </div>\n                                        )}\n        \n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">Username</label>\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"username\"\n                            value={this.state.username}\n                            onChange={this.onChangeUsername}\n                            validations={[required]}\n                            />\n                    </div>                \n                    <div className=\"form-group\">\n                        <button\n                            className=\"btn btn-primary btn-block\"\n                            disabled={this.state.loading}\n                            >\n                            {this.state.loading && (\n                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                                )}\n                            <span>Register</span>\n                        </button>\n                    </div>\n        \n                    <CheckButton\n                        style={{display: \"none\"}} ref={c => {\n                                        this.checkBtn = c;\n                                    }}\n                        />\n                </Form>\n            </div>\n            <Footer/>\n        </div>\n                );\n    }\n}","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AppNavbar from './layout/nav';\nimport Footer from './layout/footer';\nimport axios from \"axios\";\nimport Auth from \"./module/auth\";\n\nconst required = value => {\n    if (!value) {\n        return (\n                <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n                </div>\n                );\n    }\n};\n\nexport default class Topup extends Component {\n    constructor(props) {\n        super(props);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangeAmount = this.onChangeAmount.bind(this);\n\n        this.state = {\n            amount: 0,\n            loading: false,\n            message: \"\"\n        };\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            loading: true\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n\n            const options = {\n                headers: Auth.authHeader()\n            };\n            axios.post(\"/api/transaction/topup\", {amount: this.state.amount}, options).then(\n                    () => {\n                this.props.history.push(\"/home\");\n                window.location.reload();\n            },\n                    error => {\n                        const resMessage =\n                                (error.response &&\n                                        error.response.data &&\n                                        error.response.data.message) ||\n                                error.message ||\n                                error.toString();\n\n                        this.setState({\n                            loading: false,\n                            message: resMessage\n                        });\n                    }\n            );\n        } else {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        return (<div>\n            <AppNavbar/>  \n            <div className=\"Container\">\n                <Form\n                    onSubmit={this.onSubmit} ref={c => {\n                                    this.form = c;\n                                }} className = \"p-3\">\n        \n                    <h1 className=\"h3 my-5 text-muted\">Top Up</h1> \n        \n                    {this.state.message && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    {this.state.message}\n                                </div>\n                            </div>\n                                        )}\n        \n                    <div className=\"form-group\">\n                        <label htmlFor=\"amount\">Amount</label>\n                        <Input\n                            type=\"number\"\n                            min=\"0\"\n                            step=\".01\"\n                            className=\"form-control\"\n                            name=\"amount\"\n                            value={this.state.amount}\n                            onChange={this.onChangeAmount}\n                            validations={[required]}\n                            />\n                    </div>                \n                    <div className=\"form-group\">\n                        <button\n                            className=\"btn btn-primary btn-block\"\n                            disabled={this.state.loading}\n                            >\n                            {this.state.loading && (\n                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                                )}\n                            <span>Topup</span>\n                        </button>\n                    </div>\n        \n                    <CheckButton\n                        style={{display: \"none\"}} ref={c => {\n                                        this.checkBtn = c;\n                                    }}\n                        />\n                </Form>\n            </div>\n            <Footer/>\n        </div>\n                );\n    }\n}","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AppNavbar from './layout/nav';\nimport Footer from './layout/footer';\nimport axios from \"axios\";\nimport Auth from \"./module/auth\";\n\nconst required = value => {\n    if (!value) {\n        return (\n                <div className=\"alert alert-danger\" role=\"alert\">\n                    This field is required!\n                </div>\n                );\n    }\n};\n\nexport default class Pay extends Component {\n    constructor(props) {\n        super(props);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangePayee = this.onChangePayee.bind(this);\n        this.onChangeAmount = this.onChangeAmount.bind(this);\n\n        this.state = {\n            payee: \"\",\n            amount: 0,\n            loading: false,\n            message: \"\"\n        };\n    }\n\n    onChangePayee(e) {\n        this.setState({\n            payee: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            loading: true\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n\n            const options = {\n                headers: Auth.authHeader()\n            };\n            axios.post(\"/api/transaction/pay\", {payee: this.state.payee, amount: this.state.amount}, options).then(\n                    () => {\n                this.props.history.push(\"/home\");\n                window.location.reload();\n            },\n                    error => {\n                        const resMessage =\n                                (error.response &&\n                                        error.response.data &&\n                                        error.response.data.message) ||\n                                error.message ||\n                                error.toString();\n\n                        this.setState({\n                            loading: false,\n                            message: resMessage\n                        });\n                    }\n            );\n        } else {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        return (<div>\n            <AppNavbar/>  \n            <div className=\"Container\">\n                <Form\n                    onSubmit={this.onSubmit} ref={c => {\n                                    this.form = c;\n                                }} className = \"p-3\">\n        \n                    <h1 className=\"h3 my-5 text-muted\">Pay</h1> \n        \n                    {this.state.message && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    {this.state.message}\n                                </div>\n                            </div>\n                                        )}\n                    <div className=\"form-group\">\n                        <label htmlFor=\"payee\">Payee</label>\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"payee\"\n                            value={this.state.payee}\n                            onChange={this.onChangePayee}\n                            validations={[required]}\n                            />\n                    </div> \n                    <div className=\"form-group\">\n                        <label htmlFor=\"amount\">Amount</label>\n                        <Input\n                            type=\"number\"\n                            min=\"0\"\n                            step=\".01\"\n                            className=\"form-control\"\n                            name=\"amount\"\n                            value={this.state.amount}\n                            onChange={this.onChangeAmount}\n                            validations={[required]}\n                            />\n                    </div>                \n                    <div className=\"form-group\">\n                        <button\n                            className=\"btn btn-primary btn-block\"\n                            disabled={this.state.loading}\n                            >\n                            {this.state.loading && (\n                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                                )}\n                            <span>Pay</span>\n                        </button>\n                    </div>\n        \n                    <CheckButton\n                        style={{display: \"none\"}} ref={c => {\n                                        this.checkBtn = c;\n                                    }}\n                        />\n                </Form>\n            </div>\n            <Footer/>\n        </div>\n                );\n    }\n}","// This is used to determine if a user is authenticated and\n// if they are allowed to visit the page they navigated to.\n\n// If they are: they proceed to the page\n// If not: they are redirected to the login page.\nimport React from 'react'\nimport Auth from './auth'\nimport { Redirect, Route } from 'react-router-dom'\n\n        const PrivateRoute = ({ component: Component, ...rest }) => {\n\n    const user = Auth.getCurrentUser();\n\n\n    return (\n            <Route\n                {...rest}\n                render={props =>\n                        user ? (\n                                <Component {...props} />\n                                ) : (\n                                <Redirect to={{pathname: '/login', state: {from: props.location}}} />\n                            )\n            }\n            />\n            )\n};\n\nexport default PrivateRoute","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './home';\nimport Login from './login';\nimport Register from './register';\nimport Topup from './topup';\nimport Pay from './pay';\nimport PrivateRoute from \"./module/private.route\";\n\nclass App extends Component {\n    render() {\n        return (\n                <Router>\n                    <Switch>\n                    <Route path={[\"/\", \"/login\"]} exact={true} component={Login}/>\n                    <Route path='/register' exact={true} component={Register}/>                \n                    <PrivateRoute path='/home' exact={true} component={Home}/>\n                    <PrivateRoute path='/topup' exact={true} component={Topup}/>\n                    <PrivateRoute path='/pay' exact={true} component={Pay}/>\n                    </Switch>\n                </Router>\n                );\n    }\n}\n;\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}